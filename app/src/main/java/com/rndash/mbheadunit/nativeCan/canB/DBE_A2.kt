package com.rndash.mbheadunit.nativeCan.canB


import com.rndash.mbheadunit.nativeCan.CanBAddrs
import com.rndash.mbheadunit.nativeCan.CanBusNative



/**
 *    GENERATED BY parse_kt.py
 *    Decoder class for ECU Frame DBE_A2 (ID: 0x0270)
**/
object DBE_A2 {

	/** Parity (even) of bit 0 to bit 6 **/
	fun get_parity_dbe() : Boolean = getParam(0, 1) != 0

	/** not understood requirement **/
	fun get_sende_wieder() : Boolean = getParam(2, 1) != 0

	/** re-initialization completed **/
	fun get_neu_ini_fertig() : Boolean = getParam(3, 1) != 0

	/** error coding **/
	fun get_fehler_rs() : Int = getParam(4, 3)

	/** wiper request **/
	fun get_wischer_ein() : Boolean = getParam(7, 1) != 0

	/** A byte code rain sensor **/
	fun get_kenn_rs() : Boolean = getParam(8, 1) != 0

	/** Rain sensor defective **/
	fun get_rs_def() : Boolean = getParam(9, 1) != 0

	/** Schwall recognition **/
	fun get_schwall() : Boolean = getParam(11, 1) != 0

	/** (Stufen) (Stages) wiper stages **/
	fun get_wischer_st() : Int = getParam(12, 4)

	/** Readings RLS unavailable **/
	fun get_mess_rls_nv() : Boolean = getParam(21, 1) != 0

	/** Communication error to rain / light sensor **/
	fun get_kom_rls_fehl() : Boolean = getParam(22, 1) != 0

	/** Diagnosis rain / light sensor, a **/
	fun get_diag_rls_ein() : Boolean = getParam(23, 1) != 0

	override fun toString(): String {
		return """
			PARITY_DBE: ${get_parity_dbe()}
			SENDE_WIEDER: ${get_sende_wieder()}
			NEU_INI_FERTIG: ${get_neu_ini_fertig()}
			FEHLER_RS: ${get_fehler_rs()}
			WISCHER_EIN: ${get_wischer_ein()}
			KENN_RS: ${get_kenn_rs()}
			RS_DEF: ${get_rs_def()}
			SCHWALL: ${get_schwall()}
			WISCHER_ST: ${get_wischer_st()}
			MESS_RLS_NV: ${get_mess_rls_nv()}
			KOM_RLS_FEHL: ${get_kom_rls_fehl()}
			DIAG_RLS_EIN: ${get_diag_rls_ein()}
		""".trimIndent()
	}


	private fun getParam(o: Int, l: Int) : Int = CanBusNative.getECUParameterB(CanBAddrs.DBE_A2, o, l)
}
