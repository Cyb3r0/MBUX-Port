
@file:Suppress("unused", "FunctionName", "ClassName")
package com.rndash.mbheadunit.nativeCan.canB
import com.rndash.mbheadunit.CanFrame // AUTO GEN
import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for KOMBI_A3 (ID 0x00D4)
**/

object KOMBI_A3 {

    /** 
     *  Returns the most recent Can Frame representing the state
     *  of KOMBI_A3
    **/
    fun get_frame() : CanFrame? = CanBusNative.getBFrame(CanBAddrs.KOMBI_A3)

	/** Gets Current time  **/
	fun get_a_zeit() : Int = CanBusNative.getECUParameterB(CanBAddrs.KOMBI_A3, 0, 16)
	
	/** Sets Current time  **/
	fun set_a_zeit(f: CanFrame, p: Int) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 0, 16, p)
	}
	
	/** Gets Mileage  **/
	fun get_km() : Int = CanBusNative.getECUParameterB(CanBAddrs.KOMBI_A3, 16, 24)
	
	/** Sets Mileage  **/
	fun set_km(f: CanFrame, p: Int) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 16, 24, p)
	}
	
	/** Gets Range  **/
	fun get_rw() : Int = CanBusNative.getECUParameterB(CanBAddrs.KOMBI_A3, 40, 16)
	
	/** Sets Range  **/
	fun set_rw(f: CanFrame, p: Int) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 40, 16, p)
	}
	
	/**
     * Auto generated function
     * Throws exception if user tries to set a value in a frame
     * Not designated from the correct ECU
    **/
    private fun checkFrame(f: CanFrame) {
        if (f.canID != CanBAddrs.KOMBI_A3.addr) {
            throw IllegalArgumentException("CAN ID does not match object!")
        }
    }

	override fun toString() = """
		|Current time : ${get_a_zeit()} s
		|Mileage : ${get_km()} km
		|Range : ${get_rw()} km (miles)
	""".trimMargin("|")
}
