
@file:Suppress("unused", "FunctionName", "ClassName")
package com.rndash.mbheadunit.nativeCan.canC
import com.rndash.mbheadunit.CanFrame // AUTO GEN
import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for BS_208h (ID 0x0208)
**/

object BS_208h {

    /** 
     *  Returns the most recent Can Frame representing the state
     *  of BS_208h
    **/
    fun get_frame() : CanFrame? = CanBusNative.getCFrame(CanCAddrs.BS_208h)

	/** Gets target gear, lower limit **/
	fun get_gmin_esp() : GMIN_ESP = when(CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 5, 3)) {
		 0 -> GMIN_ESP.PASSIVE
		 1 -> GMIN_ESP.G1
		 2 -> GMIN_ESP.G2
		 3 -> GMIN_ESP.G3
		 4 -> GMIN_ESP.G4
		 5 -> GMIN_ESP.G5
		 6 -> GMIN_ESP.G6
		 7 -> GMIN_ESP.G7
		 else -> throw Exception("Invalid raw value for GMIN_ESP")
	}
	
	/** Sets target gear, lower limit **/
	fun set_gmin_esp(f: CanFrame, p: GMIN_ESP) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 5, 3, p.raw)
	}
	
	/** Gets target gear, upper limit **/
	fun get_gmax_esp() : GMAX_ESP = when(CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 2, 3)) {
		 0 -> GMAX_ESP.PASSIVE
		 1 -> GMAX_ESP.G1
		 2 -> GMAX_ESP.G2
		 3 -> GMAX_ESP.G3
		 4 -> GMAX_ESP.G4
		 5 -> GMAX_ESP.G5
		 6 -> GMAX_ESP.G6
		 7 -> GMAX_ESP.G7
		 else -> throw Exception("Invalid raw value for GMAX_ESP")
	}
	
	/** Sets target gear, upper limit **/
	fun set_gmax_esp(f: CanFrame, p: GMAX_ESP) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 2, 3, p.raw)
	}
	
	/** Gets Target gear request from ART **/
	fun get_minmax_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 1, 1) != 0
	
	/** Sets Target gear request from ART **/
	fun set_minmax_art(f: CanFrame, p: Boolean) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 1, 1, if(p) 1 else 0)
	}
	
	/** Gets ESP / ART request: "Active downshift" **/
	fun get_akt_r_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 0, 1) != 0
	
	/** Sets ESP / ART request: "Active downshift" **/
	fun set_akt_r_esp(f: CanFrame, p: Boolean) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 0, 1, if(p) 1 else 0)
	}
	
	/** Gets switching line shift ESP **/
	fun get_slv_esp() : SLV_ESP = when(CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 12, 4)) {
		 0 -> SLV_ESP.SKL0
		 1 -> SLV_ESP.SKL1
		 2 -> SLV_ESP.SKL2
		 3 -> SLV_ESP.SKL3
		 4 -> SLV_ESP.SKL4
		 5 -> SLV_ESP.SKL5
		 6 -> SLV_ESP.SKL6
		 7 -> SLV_ESP.SKL7
		 8 -> SLV_ESP.SKL8
		 9 -> SLV_ESP.SKL9
		 10 -> SLV_ESP.SKL10
		 else -> throw Exception("Invalid raw value for SLV_ESP")
	}
	
	/** Sets switching line shift ESP **/
	fun set_slv_esp(f: CanFrame, p: SLV_ESP) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 12, 4, p.raw)
	}
	
	/** Gets Cruise control mode off **/
	fun get_tm_aus() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 11, 1) != 0
	
	/** Sets Cruise control mode off **/
	fun set_tm_aus(f: CanFrame, p: Boolean) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 11, 1, if(p) 1 else 0)
	}
	
	/** Gets system status **/
	fun get_szs() : SZS = when(CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 9, 2)) {
		 0 -> SZS.ERR_DIAG
		 1 -> SZS.NORM
		 2 -> SZS.NOT_DEFINED
		 3 -> SZS.EXHAUST
		 else -> throw Exception("Invalid raw value for SZS")
	}
	
	/** Sets system status **/
	fun set_szs(f: CanFrame, p: SZS) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 9, 2, p.raw)
	}
	
	/** Gets Suppression of dynamic full load downshift **/
	fun get_ddyn_unt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 8, 1) != 0
	
	/** Sets Suppression of dynamic full load downshift **/
	fun set_ddyn_unt(f: CanFrame, p: Boolean) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 8, 1, if(p) 1 else 0)
	}
	
	/** Gets ART brake intervention active **/
	fun get_bre_akt_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 19, 1) != 0
	
	/** Sets ART brake intervention active **/
	fun set_bre_akt_art(f: CanFrame, p: Boolean) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 19, 1, if(p) 1 else 0)
	}
	
	/** Gets ESP request: insert "N" **/
	fun get_anfn() : ANFN = when(CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 17, 2)) {
		 0 -> ANFN.NOT_DEFINED
		 1 -> ANFN.ANF_N
		 2 -> ANFN.IDLE
		 3 -> ANFN.SNV
		 else -> throw Exception("Invalid raw value for ANFN")
	}
	
	/** Sets ESP request: insert "N" **/
	fun set_anfn(f: CanFrame, p: ANFN) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 17, 2, p.raw)
	}
	
	/** Gets ESP brake intervention active **/
	fun get_bre_akt_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 16, 1) != 0
	
	/** Sets ESP brake intervention active **/
	fun set_bre_akt_esp(f: CanFrame, p: Boolean) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 16, 1, if(p) 1 else 0)
	}
	
	/** Gets Set braking torque (BR240 factor 1.8 greater) **/
	fun get_mbre_esp() : Int = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 20, 12)
	
	/** Sets Set braking torque (BR240 factor 1.8 greater) **/
	fun set_mbre_esp(f: CanFrame, p: Int) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 20, 12, p)
	}
	
	/** Gets direction of rotation of rear wheel right **/
	fun get_drtghr() : DRTGHR = when(CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 32, 2)) {
		 0 -> DRTGHR.PASSIVE
		 1 -> DRTGHR.FORWARD
		 2 -> DRTGHR.REVERSE
		 3 -> DRTGHR.SNV
		 else -> throw Exception("Invalid raw value for DRTGHR")
	}
	
	/** Sets direction of rotation of rear wheel right **/
	fun set_drtghr(f: CanFrame, p: DRTGHR) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 32, 2, p.raw)
	}
	
	/** Gets wheel speed rear right **/
	fun get_dhr() : Int = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 34, 14)
	
	/** Sets wheel speed rear right **/
	fun set_dhr(f: CanFrame, p: Int) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 34, 14, p)
	}
	
	/** Gets direction of rotation of rear left wheel **/
	fun get_drtghl() : DRTGHL = when(CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 48, 2)) {
		 0 -> DRTGHL.PASSIVE
		 1 -> DRTGHL.FORWARD
		 2 -> DRTGHL.REVERSE
		 3 -> DRTGHL.SNV
		 else -> throw Exception("Invalid raw value for DRTGHL")
	}
	
	/** Sets direction of rotation of rear left wheel **/
	fun set_drtghl(f: CanFrame, p: DRTGHL) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 48, 2, p.raw)
	}
	
	/** Gets rear left wheel speed **/
	fun get_dhl() : Int = CanBusNative.getECUParameterC(CanCAddrs.BS_208h, 50, 14)
	
	/** Sets rear left wheel speed **/
	fun set_dhl(f: CanFrame, p: Int) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 50, 14, p)
	}
	
	/**
     * Auto generated function
     * Throws exception if user tries to set a value in a frame
     * Not designated from the correct ECU
    **/
    private fun checkFrame(f: CanFrame) {
        if (f.canID != CanCAddrs.BS_208h.addr) {
            throw IllegalArgumentException("CAN ID does not match object!")
        }
    }

	override fun toString() = """
		|Frame BS_208h (0x0208):
		|	target gear, lower limit: ${get_gmin_esp()}
		|	target gear, upper limit: ${get_gmax_esp()}
		|	Target gear request from ART: ${get_minmax_art()}
		|	ESP / ART request: "Active downshift": ${get_akt_r_esp()}
		|	switching line shift ESP: ${get_slv_esp()}
		|	Cruise control mode off: ${get_tm_aus()}
		|	system status: ${get_szs()}
		|	Suppression of dynamic full load downshift: ${get_ddyn_unt()}
		|	ART brake intervention active: ${get_bre_akt_art()}
		|	ESP request: insert "N": ${get_anfn()}
		|	ESP brake intervention active: ${get_bre_akt_esp()}
		|	Set braking torque (BR240 factor 1.8 greater): ${get_mbre_esp()}
		|	direction of rotation of rear wheel right: ${get_drtghr()}
		|	wheel speed rear right: ${get_dhr()}
		|	direction of rotation of rear left wheel: ${get_drtghl()}
		|	rear left wheel speed: ${get_dhl()}
	""".trimMargin("|")
}
