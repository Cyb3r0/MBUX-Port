
@file:Suppress("unused", "FunctionName", "ClassName")
package com.rndash.mbheadunit.nativeCan.canB
import com.rndash.mbheadunit.CanFrame // AUTO GEN
import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for GW_C_B7 (ID 0x0005)
**/

object GW_C_B7 {

    /** 
     *  Returns the most recent Can Frame representing the state
     *  of GW_C_B7
    **/
    fun get_frame() : CanFrame? = CanBusNative.getBFrame(CanBAddrs.GW_C_B7)

	/** Gets direction of rotation of the front right wheel **/
	fun get_drtgvr() : DRTGVR = when(CanBusNative.getECUParameterB(CanBAddrs.GW_C_B7, 32, 2)) {
		 0 -> DRTGVR.PASSIVE
		 1 -> DRTGVR.FORWARD
		 2 -> DRTGVR.REVERSE
		 3 -> DRTGVR.SNV
		 else -> throw Exception("Invalid raw value for DRTGVR")
	}
	
	/** Sets direction of rotation of the front right wheel **/
	fun set_drtgvr(f: CanFrame, p: DRTGVR) {
		checkFrame(f)
		CanBusNative.setFrameParameter(f, 32, 2, p.raw)
	}
	
	/** Gets wheel speed front right  **/
	fun get_dvr() : Int = CanBusNative.getECUParameterB(CanBAddrs.GW_C_B7, 34, 14)
	
	/** Sets wheel speed front right  **/
	fun set_dvr(f: CanFrame, p: Int) {
		checkFrame(f)
		CanBusNative.setFrameParameter(f, 34, 14, p)
	}
	
	/**
     * Auto generated function
     * Throws exception if user tries to set a value in a frame
     * Not designated from the correct ECU
    **/
    private fun checkFrame(f: CanFrame) {
        if (f.canID != CanBAddrs.GW_C_B7.addr) {
            throw IllegalArgumentException("CAN ID does not match object!")
        }
    }

	override fun toString() = """
		|Frame GW_C_B7 (0x0005):
		|	direction of rotation of the front right wheel: ${get_drtgvr()}
		|	wheel speed front right : ${get_dvr()} 1 / min
	""".trimMargin("|")
}
