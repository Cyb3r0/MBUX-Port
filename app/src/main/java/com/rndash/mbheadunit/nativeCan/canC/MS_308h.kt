package com.rndash.mbheadunit.nativeCan.canC


import com.rndash.mbheadunit.nativeCan.CanCAddrs
import com.rndash.mbheadunit.nativeCan.CanBusNative



/**
 *    GENERATED BY parse_kt.py
 *    Decoder class for ECU Frame MS_308h (ID: 0x0308)
**/
object MS_308h {

	/** clutch is pressed **/
	fun get_kpl() : Boolean = getParam(0, 1) != 0

	/** Beg. "Open" lock-up clutch **/
	fun get_kueb_o_a() : Boolean = getParam(1, 1) != 0

	/** Speed ​​limiting function active **/
	fun get_n_max_bg() : Boolean = getParam(2, 1) != 0

	/** Part fuel cut **/
	fun get_sast() : Boolean = getParam(3, 1) != 0

	/** Fuel cut full **/
	fun get_sasv() : Boolean = getParam(4, 1) != 0

	/** Fuel filter clogged warning light (only CR2 USA) **/
	fun get_ksf_kl() : Boolean = getParam(5, 1) != 0

	/** Water in fuel warning light (only CR2 USA) **/
	fun get_wks_kl() : Boolean = getParam(6, 1) != 0

	/** Zylinderabschaltbedingungen met **/
	fun get_zasbed() : Boolean = getParam(7, 1) != 0

	/** Engine speed **/
	fun get_nmot() : Int = getParam(8, 16)

	/** Alert Eco-steering pump **/
	fun get_elhp_warn() : Boolean = getParam(25, 1) != 0

	/** Ethanol operation detected **/
	fun get_eoh() : Boolean = getParam(26, 1) != 0

	/** Air filter clogged pilot (diesel) **/
	fun get_lufi_kl() : Boolean = getParam(27, 1) != 0

	/** preglow warning **/
	fun get_vgl_kl() : Boolean = getParam(28, 1) != 0

	/** Oil level / oil pressure warning light **/
	fun get_oel_kl() : Boolean = getParam(29, 1) != 0

	/** Diagnostic indicator (OBD II) **/
	fun get_diag_kl() : Boolean = getParam(30, 1) != 0

	/** Tank lid open warning **/
	fun get_tank_kl() : Boolean = getParam(31, 1) != 0

	/** Engine oil temperature too high (overheating) **/
	fun get_uehitz() : Boolean = getParam(32, 1) != 0

	/** cylinder deactivation **/
	fun get_zas() : Boolean = getParam(33, 1) != 0

	/** ADR pilot light (only commercial vehicles) **/
	fun get_adr_kl() : Boolean = getParam(34, 1) != 0

	/** ADR faulty indicator light (only commercial vehicles) **/
	fun get_adr_def_kl() : Boolean = getParam(35, 1) != 0

	/** Cranking **/
	fun get_anl_lft() : Boolean = getParam(36, 1) != 0

	/** Motor fan defective indicator light **/
	fun get_lueft_mot_kl() : Boolean = getParam(37, 1) != 0

	/** Speed ​​limit display is active (0 for CR) **/
	fun get_dbaa() : Boolean = getParam(38, 1) != 0

	/** Cooling water temperature too high **/
	fun get_temp_kl() : Boolean = getParam(39, 1) != 0

	/** oil temperature **/
	fun get_t_oel() : Int = getParam(40, 8)

	/** oil level **/
	fun get_oel_fs() : Int = getParam(48, 8)

	/** oil quality **/
	fun get_oel_qual() : Int = getParam(56, 8)

	override fun toString(): String {
		return """
			KPL: ${get_kpl()}
			KUEB_O_A: ${get_kueb_o_a()}
			N_MAX_BG: ${get_n_max_bg()}
			SAST: ${get_sast()}
			SASV: ${get_sasv()}
			KSF_KL: ${get_ksf_kl()}
			WKS_KL: ${get_wks_kl()}
			ZASBED: ${get_zasbed()}
			NMOT: ${get_nmot()}
			ELHP_WARN: ${get_elhp_warn()}
			EOH: ${get_eoh()}
			LUFI_KL: ${get_lufi_kl()}
			VGL_KL: ${get_vgl_kl()}
			OEL_KL: ${get_oel_kl()}
			DIAG_KL: ${get_diag_kl()}
			TANK_KL: ${get_tank_kl()}
			UEHITZ: ${get_uehitz()}
			ZAS: ${get_zas()}
			ADR_KL: ${get_adr_kl()}
			ADR_DEF_KL: ${get_adr_def_kl()}
			ANL_LFT: ${get_anl_lft()}
			LUEFT_MOT_KL: ${get_lueft_mot_kl()}
			DBAA: ${get_dbaa()}
			TEMP_KL: ${get_temp_kl()}
			T_OEL: ${get_t_oel()}
			OEL_FS: ${get_oel_fs()}
			OEL_QUAL: ${get_oel_qual()}
		""".trimIndent()
	}


	private fun getParam(o: Int, l: Int) : Int = CanBusNative.getECUParameterC(CanCAddrs.MS_308h, o, l)
}
