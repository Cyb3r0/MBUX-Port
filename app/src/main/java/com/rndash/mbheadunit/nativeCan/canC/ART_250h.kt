
package com.rndash.mbheadunit.nativeCan.canC

import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for ART_250h (ID 0x0250)
**/

object ART_250h {

    	/** Gets Suppression of dynamic full load downshift **/
	fun get_dyn_unt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 7, 1) != 0
	
	/** Gets brake light suppression **/
	fun get_bl_unt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 6, 1) != 0
	
	/** Gets ART brakes **/
	fun get_art_bre() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 5, 1) != 0
	
	/** Gets ART ok **/
	fun get_art_ok() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 4, 1) != 0
	
	/** Gets switching line shift ART **/
	fun get_slv_art() : SLV_ART = when(CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 0, 4)) {
		 0 -> SLV_ART.SKL0
		 1 -> SLV_ART.SKL1
		 2 -> SLV_ART.SKL2
		 3 -> SLV_ART.SKL3
		 4 -> SLV_ART.SKL4
		 5 -> SLV_ART.SKL5
		 6 -> SLV_ART.SKL6
		 7 -> SLV_ART.SKL7
		 8 -> SLV_ART.SKL8
		 9 -> SLV_ART.SKL9
		 10 -> SLV_ART.SKL10
		 else -> throw Exception("Invalid raw value for SLV_ART")
	}
	
	/** Gets Cityassistent regulates **/
	fun get_cas_reg() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 10, 1) != 0
	
	/** Gets Motor torque request dynamic **/
	fun get_mdyn_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 9, 1) != 0
	
	/** Gets Motor torque request parity (even parity) **/
	fun get_mpar_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 8, 1) != 0
	
	/** Gets ART regulates **/
	fun get_art_reg() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 18, 1) != 0
	
	/** Gets Limiter controls **/
	fun get_lim_reg() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 17, 1) != 0
	
	/** Gets Required. Engine torque **/
	fun get_m_art() : Int = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 19, 13)
	
	/** Gets message counter **/
	fun get_bz250h() : Int = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 32, 4)
	
	/** Gets braking torque (0000h: passive value) **/
	fun get_mbre_art() : Int = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 36, 12)
	
	/** Gets target gear, lower limit **/
	fun get_gmin_art() : GMIN_ART = when(CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 53, 3)) {
		 0 -> GMIN_ART.PASSIVE
		 1 -> GMIN_ART.G1
		 2 -> GMIN_ART.G2
		 3 -> GMIN_ART.G3
		 4 -> GMIN_ART.G4
		 5 -> GMIN_ART.G5
		 6 -> GMIN_ART.G6
		 7 -> GMIN_ART.G7
		 else -> throw Exception("Invalid raw value for GMIN_ART")
	}
	
	/** Gets target gear, upper limit **/
	fun get_gmax_art() : GMAX_ART = when(CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 50, 3)) {
		 0 -> GMAX_ART.PASSIVE
		 1 -> GMAX_ART.G1
		 2 -> GMAX_ART.G2
		 3 -> GMAX_ART.G3
		 4 -> GMAX_ART.G4
		 5 -> GMAX_ART.G5
		 6 -> GMAX_ART.G6
		 7 -> GMAX_ART.G7
		 else -> throw Exception("Invalid raw value for GMAX_ART")
	}
	
	/** Gets ART request: "Active downshift" **/
	fun get_akt_r_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_250h, 48, 1) != 0
	
	
}
