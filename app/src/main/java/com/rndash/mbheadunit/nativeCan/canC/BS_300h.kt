
package com.rndash.mbheadunit.nativeCan.canC

import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for BS_300h (ID 0x0300)
**/

object BS_300h {

    	/** Gets Steering angle sensor initialization possible **/
	fun get_lws_ini_ein() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 7, 1) != 0
	
	/** Gets Initialization of steering angle sensor o.k. **/
	fun get_lws_ini_ok() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 6, 1) != 0
	
	/** Gets ESP yaw moment control active **/
	fun get_esp_gier_akt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 5, 1) != 0
	
	/** Gets Enable ART **/
	fun get_art_e() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 4, 1) != 0
	
	/** Gets Full braking (ABS controls all 4 wheels) **/
	fun get_vollbre() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 3, 1) != 0
	
	/** Gets BAS control active **/
	fun get_bas_akt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 2, 1) != 0
	
	/** Gets Dynamic engine torque request **/
	fun get_dmdyn_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 1, 1) != 0
	
	/** Gets Motor torque request parity (even parity) **/
	fun get_dmpar_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 0, 1) != 0
	
	/** Gets driver brakes **/
	fun get_sfb() : SFB = when(CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 14, 2)) {
		 0 -> SFB.BRAKE_NO
		 1 -> SFB.BREMSE_YES
		 2 -> SFB.NOT_DEFINED
		 3 -> SFB.SNV
		 else -> throw Exception("Invalid raw value for SFB")
	}
	
	/** Gets driver brakes parity (even parity) **/
	fun get_sfb_pa() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 13, 1) != 0
	
	/** Gets transmission cycle time **/
	fun get_t_z() : T_Z = when(CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 11, 2)) {
		 0 -> T_Z.NOT_DEFINED
		 1 -> T_Z.T20_0
		 2 -> T_Z.T23_1
		 3 -> T_Z.SNV
		 else -> throw Exception("Invalid raw value for T_Z")
	}
	
	/** Gets drive torque control active **/
	fun get_amr_akt_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 10, 1) != 0
	
	/** Gets Dynamic motor torque request **/
	fun get_mdyn_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 9, 1) != 0
	
	/** Gets Motor torque request parity (even parity) **/
	fun get_mpar_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 8, 1) != 0
	
	/** Gets Motor torque request Max **/
	fun get_dmmax_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 18, 1) != 0
	
	/** Gets engine torque request min **/
	fun get_dmmin_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 17, 1) != 0
	
	/** Gets engine torque request. Toggle 40ms + -10 **/
	fun get_dmtgl_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 16, 1) != 0
	
	/** Gets Required. Engine torque **/
	fun get_dm_art() : Int = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 19, 13)
	
	/** Gets Motor torque request Max **/
	fun get_mmax_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 34, 1) != 0
	
	/** Gets Motor torque request Min **/
	fun get_mmin_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 33, 1) != 0
	
	/** Gets motor torque request. Toggle 40ms + -10 **/
	fun get_mtgl_esp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 32, 1) != 0
	
	/** Gets Required. Engine torque **/
	fun get_m_esp() : Int = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 35, 13)
	
	/** Gets Raw signal yaw rate without adjustment / filtering (+ = left) **/
	fun get_gier_roh() : Int = CanBusNative.getECUParameterC(CanCAddrs.BS_300h, 48, 16)
	
	
}
