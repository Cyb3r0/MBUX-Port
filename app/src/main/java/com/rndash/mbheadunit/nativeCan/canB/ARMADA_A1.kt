
package com.rndash.mbheadunit.nativeCan.canB

import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for ARMADA_A1 (ID 0x0012)
**/

object ARMADA_A1 {

    	/** Gets SRS control lamp (workshop) **/
	fun get_srs_werk() : Boolean = CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 7, 1) != 0
	
	/** Gets SRS control lamp (service) **/
	fun get_srs_serv() : Boolean = CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 6, 1) != 0
	
	/** Gets SRS control lamps flash **/
	fun get_srs_blink() : Boolean = CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 5, 1) != 0
	
	/** Gets SRS control lamp **/
	fun get_srs_kl() : Boolean = CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 4, 1) != 0
	
	/** Gets AKSE lights are flashing **/
	fun get_akse_blink() : Boolean = CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 1, 1) != 0
	
	/** Gets switch on the AKSE lamp **/
	fun get_akse_ein() : Boolean = CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 0, 1) != 0
	
	/** Gets Child seat status **/
	fun get_kisi_st() : KISI_ST = when(CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 13, 3)) {
		 0 -> KISI_ST.NO_KISI
		 1 -> KISI_ST.KISI_V_ERK
		 2 -> KISI_ST.KISI_R_ERK
		 4 -> KISI_ST.KISI_FPOS
		 6 -> KISI_ST.KISI_FEHLER
		 7 -> KISI_ST.SNV
		 else -> throw Exception("Invalid raw value for KISI_ST")
	}
	
	/** Gets SBE class passenger **/
	fun get_sbe_bf() : SBE_BF = when(CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 21, 3)) {
		 0 -> SBE_BF.CLASS0
		 1 -> SBE_BF.CLASS_1
		 2 -> SBE_BF.CLASS2
		 3 -> SBE_BF.CLASS_3
		 4 -> SBE_BF.CLASS_4
		 5 -> SBE_BF.CLASS_5
		 6 -> SBE_BF.SBE_FEHLER
		 7 -> SBE_BF.SNV
		 else -> throw Exception("Invalid raw value for SBE_BF")
	}
	
	/** Gets Passenger detection fast **/
	fun get_psg_detec_fast() : PSG_DETEC_FAST = when(CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 19, 2)) {
		 0 -> PSG_DETEC_FAST.SNA
		 1 -> PSG_DETEC_FAST.PSG_PRESENT
		 2 -> PSG_DETEC_FAST.FAULT
		 3 -> PSG_DETEC_FAST.PSG_ABSENT
		 else -> throw Exception("Invalid raw value for PSG_DETEC_FAST")
	}
	
	/** Gets seat belt buckle front passenger **/
	fun get_gs_bf() : GS_BF = when(CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 16, 2)) {
		 0 -> GS_BF.GS_OK
		 1 -> GS_BF.GS_NOK
		 2 -> GS_BF.GS_FEHLER
		 3 -> GS_BF.SNV
		 else -> throw Exception("Invalid raw value for GS_BF")
	}
	
	/** Gets SBE class driver **/
	fun get_sbe_f() : SBE_F = when(CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 29, 3)) {
		 0 -> SBE_F.CLASS0
		 1 -> SBE_F.CLASS_1
		 2 -> SBE_F.CLASS2
		 3 -> SBE_F.CLASS_3
		 4 -> SBE_F.CLASS_4
		 5 -> SBE_F.CLASS_5
		 6 -> SBE_F.SBE_FEHLER
		 7 -> SBE_F.SNV
		 else -> throw Exception("Invalid raw value for SBE_F")
	}
	
	/** Gets seat belt buckle driver **/
	fun get_gs_f() : GS_F = when(CanBusNative.getECUParameterB(CanBAddrs.ARMADA_A1, 24, 2)) {
		 0 -> GS_F.GS_OK
		 1 -> GS_F.GS_NOK
		 2 -> GS_F.GS_FEHLER
		 3 -> GS_F.SNV
		 else -> throw Exception("Invalid raw value for GS_F")
	}
	
	
}
