
package com.rndash.mbheadunit.nativeCan.canC

import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for ART_258h (ID 0x0258)
**/

object ART_258h {

    	/** Gets ART error code **/
	fun get_art_err() : ART_ERR = when(CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 4, 4)) {
		 0 -> ART_ERR.OK
		 1 -> ART_ERR.DIRT
		 2 -> ART_ERR.ART_DEF
		 3 -> ART_ERR.ART_LIM_DEF
		 4 -> ART_ERR.EXT
		 5 -> ART_ERR.DBC_DEF
		 6 -> ART_ERR.SCHMUTZ_DBC_DEF
		 7 -> ART_ERR.ART_DBC_DEF
		 8 -> ART_ERR.ART_LIM_DBC_DEF
		 9 -> ART_ERR.EXT_DBC
		 15 -> ART_ERR.UNDEFINED
		 else -> throw Exception("Invalid raw value for ART_ERR")
	}
	
	/** Gets ART info lamp **/
	fun get_art_info() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 3, 1) != 0
	
	/** Gets ART warning tone **/
	fun get_art_wt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 2, 1) != 0
	
	/** Gets Detection of stationary object **/
	fun get_s_obj() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 1, 1) != 0
	
	/** Gets Switch display to ART display **/
	fun get_art_dspl_ein() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 0, 1) != 0
	
	/** Gets set ART speed **/
	fun get_v_art() : Int = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 8, 8)
	
	/** Gets Distance relevant object **/
	fun get_abst_r_obj() : Int = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 16, 8)
	
	/** Gets driver's desired distance **/
	fun get_soll_abst() : Int = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 24, 8)
	
	/** Gets ART-Tempomat switched on **/
	fun get_tm_ein_art() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 39, 1) != 0
	
	/** Gets speed display flashing **/
	fun get_art_dspl_bl() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 38, 1) != 0
	
	/** Gets Switch on ART segment display **/
	fun get_art_seg_ein() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 37, 1) != 0
	
	/** Gets Relevant object recognized **/
	fun get_obj_erk() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 36, 1) != 0
	
	/** Gets Adaptive cruise control switched on **/
	fun get_art_ein() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 35, 1) != 0
	
	/** Gets Indication "---" on the display **/
	fun get_art_dspl_lim() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 34, 1) != 0
	
	/** Gets Indication "DTR AUS [0]" on the display **/
	fun get_art_vfbr() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 33, 1) != 0
	
	/** Gets "Winter tire limit reached" on the display **/
	fun get_art_dspl_pgb() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 32, 1) != 0
	
	/** Gets speed of detected target vehicle **/
	fun get_v_ziel() : Int = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 40, 8)
	
	/** Gets Active function **/
	fun get_assist_fkt_akt() : ASSIST_FKT_AKT = when(CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 54, 2)) {
		 0 -> ASSIST_FKT_AKT.OFF
		 1 -> ASSIST_FKT_AKT.AAS
		 2 -> ASSIST_FKT_AKT.ADTR
		 3 -> ASSIST_FKT_AKT.DBC
		 else -> throw Exception("Invalid raw value for ASSIST_FKT_AKT")
	}
	
	/** Gets LED distance assistant flash **/
	fun get_aas_led_bl() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 53, 1) != 0
	
	/** Gets Object offer distance assistant **/
	fun get_obj_agb() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 52, 1) != 0
	
	/** Gets ART distance warning is switched on **/
	fun get_art_abw_akt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 51, 1) != 0
	
	/** Gets Display of the system availability after system errors **/
	fun get_art_reakt() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 50, 1) != 0
	
	/** Gets ART is overridden by the driver **/
	fun get_art_uebersp() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 49, 1) != 0
	
	/** Gets Re-trigger the minimum display time **/
	fun get_art_dspl_neu() : Boolean = CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 48, 1) != 0
	
	/** Gets assistance system display request **/
	fun get_assist_anz_v2() : ASSIST_ANZ_V2 = when(CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 59, 5)) {
		 0 -> ASSIST_ANZ_V2.IDLE
		 1 -> ASSIST_ANZ_V2.DBC_LIM
		 2 -> ASSIST_ANZ_V2.DBC_AUS
		 3 -> ASSIST_ANZ_V2.DBC_AUS_TON
		 4 -> ASSIST_ANZ_V2.DBC_NV_AKT
		 5 -> ASSIST_ANZ_V2.DBC_NV_LIM
		 6 -> ASSIST_ANZ_V2.AAS_EIN
		 7 -> ASSIST_ANZ_V2.AAS_AUS
		 8 -> ASSIST_ANZ_V2.AAS_AUS_TON
		 9 -> ASSIST_ANZ_V2.AAS_NV_LIM
		 10 -> ASSIST_ANZ_V2.AAS_NV_OBJ
		 11 -> ASSIST_ANZ_V2.AAS_NV_FBED
		 12 -> ASSIST_ANZ_V2.AAS_FOLGEN
		 13 -> ASSIST_ANZ_V2.AAS_OBJ_VERLUST
		 14 -> ASSIST_ANZ_V2.AAS_OBJ_WECHSEL
		 15 -> ASSIST_ANZ_V2.PAS_EIN
		 16 -> ASSIST_ANZ_V2.PAS_AUS
		 17 -> ASSIST_ANZ_V2.PAS_NV
		 else -> throw Exception("Invalid raw value for ASSIST_ANZ_V2")
	}
	
	/** Gets CAS display request **/
	fun get_cas_err_anz_v2() : CAS_ERR_ANZ_V2 = when(CanBusNative.getECUParameterC(CanCAddrs.ART_258h, 56, 3)) {
		 0 -> CAS_ERR_ANZ_V2.IDLE
		 1 -> CAS_ERR_ANZ_V2.CAS_SFV_REINIGEN
		 2 -> CAS_ERR_ANZ_V2.CAS_SFV_SFH_REINIGEN
		 3 -> CAS_ERR_ANZ_V2.CAS_ERR_W
		 else -> throw Exception("Invalid raw value for CAS_ERR_ANZ_V2")
	}
	
	
}
