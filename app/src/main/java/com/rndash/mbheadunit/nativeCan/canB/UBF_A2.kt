
@file:Suppress("unused", "FunctionName", "ClassName")
package com.rndash.mbheadunit.nativeCan.canB
import com.rndash.mbheadunit.CanFrame // AUTO GEN
import com.rndash.mbheadunit.nativeCan.CanBusNative // AUTO GEN

/**
 *   Generated by db_converter.py
 *   Object for UBF_A2 (ID 0x035B)
**/

object UBF_A2 {

    /** 
     *  Returns the most recent Can Frame representing the state
     *  of UBF_A2
    **/
    fun get_frame() : CanFrame? = CanBusNative.getBFrame(CanBAddrs.UBF_A2)

	/** Gets convertible top actuation **/
	fun get_vdk_anf() : VDK_ANF = when(CanBusNative.getECUParameterB(CanBAddrs.UBF_A2, 0, 2)) {
		 0 -> VDK_ANF.NBET
		 1 -> VDK_ANF.OEFF
		 2 -> VDK_ANF.CLOSE
		 3 -> VDK_ANF.NDEF
		 else -> throw Exception("Invalid raw value for VDK_ANF")
	}
	
	/** Sets convertible top actuation **/
	fun set_vdk_anf(f: CanFrame, p: VDK_ANF) : CanFrame? {
		checkFrame(f)
		return CanBusNative.setFrameParameter(f, 0, 2, p.raw)
	}
	
	/**
     * Auto generated function
     * Throws exception if user tries to set a value in a frame
     * Not designated from the correct ECU
    **/
    private fun checkFrame(f: CanFrame) {
        if (f.canID != CanBAddrs.UBF_A2.addr) {
            throw IllegalArgumentException("CAN ID does not match object!")
        }
    }

	override fun toString() = """
		|Frame UBF_A2 (0x035B):
		|	convertible top actuation: ${get_vdk_anf()}
	""".trimMargin("|")
}
