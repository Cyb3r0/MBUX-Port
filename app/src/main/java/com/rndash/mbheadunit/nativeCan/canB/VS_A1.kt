package com.rndash.mbheadunit.nativeCan.canB


import com.rndash.mbheadunit.nativeCan.CanBAddrs
import com.rndash.mbheadunit.nativeCan.CanBusNative



/**
 *    GENERATED BY parse_kt.py
 *    Decoder class for ECU Frame VS_A1 (ID: 0x000B)
**/
object VS_A1 {

	/** Front windows move to the right short stroke **/
	fun get_fh_vr_kh() : Boolean = getParam(0, 1) != 0

	/** Open rear cover locked **/
	fun get_hd_sperr() : Boolean = getParam(1, 1) != 0

	/** Pilot roll bar **/
	fun get_uerb_kl() : Boolean = getParam(2, 1) != 0

	/** switch on warning **/
	fun get_vdk_warn() : Boolean = getParam(3, 1) != 0

	/** Front windows left move to short stroke **/
	fun get_fh_vl_kh() : Boolean = getParam(4, 1) != 0

	/** Top is active **/
	fun get_vdk_aktiv() : Boolean = getParam(5, 1) != 0

	/** top status **/
	fun get_vdk_stat() : Int = getParam(6, 2)

	/** Message 8: "top drops" **/
	fun get_vs_m8() : Boolean = getParam(8, 1) != 0

	/** Message 7: "convertible into operation" **/
	fun get_vs_m7() : Boolean = getParam(9, 1) != 0

	/** Message 6: "make roll bar low" **/
	fun get_vs_m6() : Boolean = getParam(10, 1) != 0

	/** Message 5: "trigger roll bar" **/
	fun get_vs_m5() : Boolean = getParam(11, 1) != 0

	/** Message 4: "top lock" **/
	fun get_vs_m4() : Boolean = getParam(12, 1) != 0

	/** Message 3: "Start For top operational engine" **/
	fun get_vs_m3() : Boolean = getParam(13, 1) != 0

	/** Message 2: "Kofferaumabtrennung / close ski bag" **/
	fun get_vs_m2() : Boolean = getParam(14, 1) != 0

	/** Message 1: "Close tailgate" **/
	fun get_vs_m1() : Boolean = getParam(15, 1) != 0

	/** front FHS commands lock windows **/
	fun get_fhs_v_sperr() : Boolean = getParam(16, 1) != 0

	/** Rear lid lock pawl actuated **/
	fun get_hd_sk_vs() : Boolean = getParam(17, 1) != 0

	/** Message 14: "Please include ski bag" **/
	fun get_vs_m14() : Boolean = getParam(18, 1) != 0

	/** Message 13: "convertible top closed" **/
	fun get_vs_m13() : Boolean = getParam(19, 1) != 0

	/** Message 12: "convertible top open" **/
	fun get_vs_m12() : Boolean = getParam(20, 1) != 0

	/** Message 11: "convertible top operation please wait" **/
	fun get_vs_m11() : Boolean = getParam(21, 1) != 0

	/** Message 10: "roof closed due to driving" **/
	fun get_vs_m10() : Boolean = getParam(22, 1) != 0

	/** Report 9: "seek top Workshop" **/
	fun get_vs_m9() : Boolean = getParam(23, 1) != 0

	/** Request top indicator light **/
	fun get_vdk_kl_anf() : Int = getParam(30, 2)

	override fun toString(): String {
		return """
			FH_VR_KH: ${get_fh_vr_kh()}
			HD_SPERR: ${get_hd_sperr()}
			UERB_KL: ${get_uerb_kl()}
			VDK_WARN: ${get_vdk_warn()}
			FH_VL_KH: ${get_fh_vl_kh()}
			VDK_AKTIV: ${get_vdk_aktiv()}
			VDK_STAT: ${get_vdk_stat()}
			VS_M8: ${get_vs_m8()}
			VS_M7: ${get_vs_m7()}
			VS_M6: ${get_vs_m6()}
			VS_M5: ${get_vs_m5()}
			VS_M4: ${get_vs_m4()}
			VS_M3: ${get_vs_m3()}
			VS_M2: ${get_vs_m2()}
			VS_M1: ${get_vs_m1()}
			FHS_V_SPERR: ${get_fhs_v_sperr()}
			HD_SK_VS: ${get_hd_sk_vs()}
			VS_M14: ${get_vs_m14()}
			VS_M13: ${get_vs_m13()}
			VS_M12: ${get_vs_m12()}
			VS_M11: ${get_vs_m11()}
			VS_M10: ${get_vs_m10()}
			VS_M9: ${get_vs_m9()}
			VDK_KL_ANF: ${get_vdk_kl_anf()}
		""".trimIndent()
	}


	private fun getParam(o: Int, l: Int) : Int = CanBusNative.getECUParameterB(CanBAddrs.VS_A1, o, l)
}
