package com.rndash.mbheadunit.nativeCan.canC


import com.rndash.mbheadunit.nativeCan.CanCAddrs
import com.rndash.mbheadunit.nativeCan.CanBusNative



/**
 *    GENERATED BY parse_kt.py
 *    Decoder class for ECU Frame MS_210h (ID: 0x0210)
**/
object MS_210h {

	/** Air compressor Emergency Shutdown **/
	fun get_komp_notaus() : Boolean = getParam(0, 1) != 0

	/** Switching line shift MS **/
	fun get_slv_ms() : Int = getParam(1, 4)

	/** off KSG-creep **/
	fun get_kriech_aus() : Boolean = getParam(6, 1) != 0

	/** MS-wish: "Approach 1.Gang" **/
	fun get_anf1() : Boolean = getParam(7, 1) != 0

	/** MS-wish: "Active downshift" **/
	fun get_akt_r_ms() : Boolean = getParam(8, 1) != 0

	/** off heater **/
	fun get_zh_aus_ms() : Boolean = getParam(9, 1) != 0

	/** Target gear, upper limit **/
	fun get_gmax_ms() : Int = getParam(10, 3)

	/** Target gear, lower limit **/
	fun get_gmin_ms() : Int = getParam(13, 3)

	/** pedal **/
	fun get_pw() : Int = getParam(16, 8)

	/** retrigger minimum display time on the display **/
	fun get_v_dspl_neu() : Boolean = getParam(24, 1) != 0

	/** Idle is stable **/
	fun get_ll_stbl() : Boolean = getParam(25, 1) != 0

	/** Vorglühstatus **/
	fun get_vgl_st() : Boolean = getParam(26, 1) != 0

	/** Engine start / stop system defective **/
	fun get_mss_def() : Boolean = getParam(27, 1) != 0

	/** Engine start / stop system warning **/
	fun get_mss_kl() : Boolean = getParam(28, 1) != 0

	/** Engine start / stop system active **/
	fun get_mss_akt() : Boolean = getParam(29, 1) != 0

	/** turn air compressor: Acceleration **/
	fun get_komp_baus() : Boolean = getParam(30, 1) != 0

	/** Crash signal from motor control **/
	fun get_crash_ms() : Boolean = getParam(31, 1) != 0

	/** Error pedal sensor **/
	fun get_pwg_err() : Boolean = getParam(32, 1) != 0

	/** Neutral **/
	fun get_ll() : Boolean = getParam(33, 1) != 0

	/** Beg. "Slip" lock-up clutch **/
	fun get_kueb_s_a() : Boolean = getParam(34, 1) != 0

	/** cruise control regulates **/
	fun get_tm_reg() : Boolean = getParam(35, 1) != 0

	/** Speed ​​limit switched **/
	fun get_v_max_ein() : Boolean = getParam(36, 1) != 0

	/** Kick Down (changeover scenario open!) **/
	fun get_kd_ms() : Boolean = getParam(37, 1) != 0

	/** emergency operation **/
	fun get_notl() : Boolean = getParam(38, 1) != 0

	/** Warning buzzer **/
	fun get_v_max_sum() : Boolean = getParam(39, 1) != 0

	/** FBS: Start Error **/
	fun get_fbs_se() : Boolean = getParam(40, 1) != 0

	/** Display "winter tires limit reached" on the display **/
	fun get_v_dspl_pgb() : Boolean = getParam(41, 1) != 0

	/** Cruise control switched on **/
	fun get_tm_ein() : Boolean = getParam(42, 1) != 0

	/** Speed ​​controls **/
	fun get_v_max_reg() : Boolean = getParam(43, 1) != 0

	/** Display "limit?" on display **/
	fun get_v_dspl_lim() : Boolean = getParam(44, 1) != 0

	/** "Error" indicator on the display **/
	fun get_v_dspl_err() : Boolean = getParam(45, 1) != 0

	/** display flashes **/
	fun get_v_dspl_bl() : Boolean = getParam(46, 1) != 0

	/** Geschw.begrenzer- / cruise control display a **/
	fun get_v_dspl_ein() : Boolean = getParam(47, 1) != 0

	/** Factor for fill value. d. Max. Mom with remo.. A.druck **/
	fun get_fmmotmax() : Int = getParam(48, 8)

	/** Set maximum or cruise control speed **/
	fun get_v_max_tm() : Int = getParam(56, 8)

	override fun toString(): String {
		return """
			KOMP_NOTAUS: ${get_komp_notaus()}
			SLV_MS: ${get_slv_ms()}
			KRIECH_AUS: ${get_kriech_aus()}
			ANF1: ${get_anf1()}
			AKT_R_MS: ${get_akt_r_ms()}
			ZH_AUS_MS: ${get_zh_aus_ms()}
			GMAX_MS: ${get_gmax_ms()}
			GMIN_MS: ${get_gmin_ms()}
			PW: ${get_pw()}
			V_DSPL_NEU: ${get_v_dspl_neu()}
			LL_STBL: ${get_ll_stbl()}
			VGL_ST: ${get_vgl_st()}
			MSS_DEF: ${get_mss_def()}
			MSS_KL: ${get_mss_kl()}
			MSS_AKT: ${get_mss_akt()}
			KOMP_BAUS: ${get_komp_baus()}
			CRASH_MS: ${get_crash_ms()}
			PWG_ERR: ${get_pwg_err()}
			LL: ${get_ll()}
			KUEB_S_A: ${get_kueb_s_a()}
			TM_REG: ${get_tm_reg()}
			V_MAX_EIN: ${get_v_max_ein()}
			KD_MS: ${get_kd_ms()}
			NOTL: ${get_notl()}
			V_MAX_SUM: ${get_v_max_sum()}
			FBS_SE: ${get_fbs_se()}
			V_DSPL_PGB: ${get_v_dspl_pgb()}
			TM_EIN: ${get_tm_ein()}
			V_MAX_REG: ${get_v_max_reg()}
			V_DSPL_LIM: ${get_v_dspl_lim()}
			V_DSPL_ERR: ${get_v_dspl_err()}
			V_DSPL_BL: ${get_v_dspl_bl()}
			V_DSPL_EIN: ${get_v_dspl_ein()}
			FMMOTMAX: ${get_fmmotmax()}
			V_MAX_TM: ${get_v_max_tm()}
		""".trimIndent()
	}


	private fun getParam(o: Int, l: Int) : Int = CanBusNative.getECUParameterC(CanCAddrs.MS_210h, o, l)
}
